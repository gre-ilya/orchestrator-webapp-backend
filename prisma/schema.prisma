// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  Int @id @default(autoincrement())
  email String @unique @db.VarChar(128)
  passwordHash String @db.VarChar(256)
  role UserRole @default(User)
  isActivated Boolean @default(false)
  activationLink String? @db.VarChar(256)

  refreshTokens RefreshToken[]
  projects Project[]
}

model RefreshToken {
  jti String @id @db.VarChar(32)
  created_at DateTime @default(now())
  revoked Boolean @default(false)
  device_id String @db.VarChar(32)

  user User @relation(fields: [userId], references: [id])
  userId Int
}

model Project {
  id Int @id @default(autoincrement())
  name String @db.VarChar(128)

  user User @relation(fields: [userId], references: [id])
  userId Int
  services Service[]
}

model Service {
  id Int @id @default(autoincrement())
  name String @db.VarChar(128)
  repository String @db.VarChar(256)
  build_template Int?
  build_command String? @db.VarChar(128)
  deploy_command String? @db.VarChar(128)
  ip String @db.VarChar(15)
  port Int
  variables Json

  project Project @relation(fields: [projectId], references: [id])
  projectId Int
  deployments Deployment[]
}

model Deployment {
  id Int @id @default(autoincrement())
  build_logs String @db.VarChar(32768)
  deploy_logs String @db.VarChar(32768)
  status DeploymentStatus @default(Building)
  buildDate DateTime

  service Service @relation(fields: [serviceId], references: [id])
  serviceId Int
}

enum UserRole {
  User
  Admin
}

enum DeploymentStatus {
  Building
  Deploying
  Active
}
